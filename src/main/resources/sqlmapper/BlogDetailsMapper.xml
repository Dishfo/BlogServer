<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cs.sicnu.fiveg.mapper.BlogDetailsMapper">

    <resultMap id="BaseResultMap" type="cs.sicnu.fiveg.pojo.BlogDetails">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="blog_title" jdbcType="CHAR" property="blogTitle"/>
        <result column="blog_date" jdbcType="TIMESTAMP" property="blogDate"/>
        <result column="blog_read" jdbcType="INTEGER" property="blogRead"/>
        <result column="blog_summary" jdbcType="CHAR" property="blogSummary"/>
        <result column="blog_label" jdbcType="CHAR" property="blogLabel"/>
        <result column="blog_delete" jdbcType="INTEGER" property="blogDelete"/>
        <result column="blog_category" jdbcType="INTEGER" property="blogCategory"/>
        <result column="blog_html_content" jdbcType="LONGVARCHAR" property="blogHtmlContent"/>
        <result column="blog_md_content" jdbcType="LONGVARCHAR" property="blogMdContent"/>

        <association property="blogAuthor" javaType="cs.sicnu.fiveg.pojo.UserInfo">
            <id property="userId" column="blog_author" jdbcType="INTEGER"/>
        </association>

    </resultMap>

    <resultMap id="ExtendResultMap" type="cs.sicnu.fiveg.pojo.BlogDetails">
        <id column="blog_id" jdbcType="INTEGER" property="blogId"/>
        <result column="blog_title" jdbcType="CHAR" property="blogTitle"/>
        <result column="blog_date" jdbcType="TIMESTAMP" property="blogDate"/>
        <result column="blog_read" jdbcType="INTEGER" property="blogRead"/>
        <result column="blog_summary" jdbcType="CHAR" property="blogSummary"/>
        <result column="blog_label" jdbcType="CHAR" property="blogLabel"/>
        <result column="blog_delete" jdbcType="INTEGER" property="blogDelete"/>
        <result column="blog_category" jdbcType="INTEGER" property="blogCategory"/>
        <result column="blog_html_content" jdbcType="LONGVARCHAR" property="blogHtmlContent"/>
        <result column="blog_md_content" jdbcType="LONGVARCHAR" property="blogMdContent"/>

        <association property="blogAuthor"
                     javaType="cs.sicnu.fiveg.pojo.UserInfo"
                     columnPrefix="u_">
            <id property="userId" column="user_id" javaType="int" jdbcType="INTEGER"/>
            <result property="userName" column="user_name" jdbcType="CHAR"/>
            <result property="userNickName" column="user_nick_name" jdbcType="CHAR"/>
        </association>

    </resultMap>


    <insert id="insert" parameterType="cs.sicnu.fiveg.pojo.BlogDetails">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        # 一定要注意类型的对应 不然你会玩一年
        insert into blog_details (
        blog_id,
        blog_title,
        blog_author,
        blog_date,
        blog_read,
        blog_summary,
        blog_label,
        blog_delete,
        blog_category,
        blog_html_content,
        blog_md_content)
        values (#{blogId,jdbcType=INTEGER},
        #{blogTitle,jdbcType=CHAR},
        #{blogAuthor,jdbcType=INTEGER,javaType=UserInfo,typeHandler=userIdHandler},
        #{blogDate,jdbcType=TIMESTAMP},
        #{blogRead,jdbcType=INTEGER},
        #{blogSummary,jdbcType=CHAR},
        #{blogLabel,jdbcType=CHAR},
        #{blogDelete,jdbcType=INTEGER},
        #{blogCategory,jdbcType=INTEGER},
        #{blogHtmlContent,jdbcType=LONGVARCHAR},
        #{blogMdContent,jdbcType=LONGVARCHAR})
    </insert>
    <select id="selectAll" resultMap="BaseResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        blog_id,
        blog_title,
        blog_author,
        blog_date,
        blog_read,
        blog_summary,
        blog_label,
        blog_delete,
        blog_category,
        blog_html_content,
        blog_md_content
        from blog_details
        where  blog_delete = 0
    </select>

    <select id="selectAllWithUserInfo" resultMap="ExtendResultMap">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        blog_id,
        blog_title,
        blog_date,
        blog_read,
        blog_summary,
        blog_label,
        blog_delete,
        blog_category,
        blog_html_content,
        blog_md_content,
        u.user_id as u_user_id,
        u.user_name as u_user_name,
        u.user_nick_name as u_user_nick_name
        from blog_details b inner join user_info u on b.blog_author=u.user_id
        where  b.blog_delete = 0
    </select>


    <select id="selectBlogCount" resultType="int" parameterType="BlogDetails">
        select COUNT(blog_id)
        from blog_details
        <where>
            blog_delete = 0
            <if test="blogId!=null ">
                and blog_id=#{blogId}
            </if>
            <if test="blogAuthor!=null and blogAuthor.userId!=null ">
                and blog_author like CONCAT('%',#{blogAuthor.userId},'%')
            </if>
            <if test="blogTitle!=null ">
                and blog_title like CONCAT('%',#{blogTitle},'%')
            </if>
        </where>
    </select>

    <select id="selectPaged" resultMap="ExtendResultMap">
        select
        blog_id,
        blog_title,
        blog_date,
        blog_read,
        blog_summary,
        blog_label,
        blog_delete,
        blog_category,
        blog_html_content,
        blog_md_content,
        u.user_id as u_user_id,
        u.user_name as u_user_name,
        u.user_nick_name as u_user_nick_name
        from blog_details b inner join user_info u on b.blog_author=u.user_id
        <where>
            b.blog_delete = 0
            <if test="details.blogCategory!=null ">
                and blog_category=#{details.blogCategory}
            </if>
            <if test="details.blogTitle!=null ">
                and blog_title like CONCAT('%',#{details.blogTitle},'%')
            </if>
        </where>
        ORDER BY blog_date DESC limit #{size} OFFSET #{pageof}
    </select>

    <update id="update">
        update blog_details
        <set>
            <if test="blogDetails.blogTitle!=null ">
                blog_title=#{blogDetails.blogTitle},
            </if>

            <if test="blogDetails.blogAuthor!=null and blogDetails.blogAuthor.userId!=null">
                blog_author=#{blogDetails.blogAuthor,
                javaType=UserInfo,jdbcType=INTEGER,
                typeHandler=userIdHandler},
            </if>

            <if test="blogDetails.blogDate!=null ">
                blog_date=#{blogDetails.blogDate},
            </if>
            <if test="blogDetails.blogRead!=null ">
                blog_read=#{blogDetails.blogRead},
            </if>

            <if test="blogDetails.blogSummary!=null ">
                blog_summary=#{blogDetails.blogSummary},
            </if>

            <if test="blogDetails.blogLabel!=null ">
                blog_label=#{blogDetails.blogLabel},
            </if>

            <if test="blogDetails.blogDelete!=null ">
                blog_delete=#{blogDetails.blogDelete},
            </if>

            <if test="blogDetails.blogHtmlContent!=null ">
                blog_html_content=#{blogDetails.blogHtmlContent},
            </if>

            <if test="blogDetails.blogMdContent!=null ">
                blog_md_content=#{blogDetails.blogMdContent},
            </if>
        </set>
        where blog_id=#{blogDetails.blogId}
    </update>

    <select id="selectNextBlog" resultMap="ExtendResultMap">
        select
            blog_id,
            blog_title,
            blog_date,
            blog_read,
            blog_summary,
            blog_label,
            blog_delete,
            blog_category,
            blog_html_content,
            blog_md_content,
            u.user_id        as u_user_id,
            u.user_name      as u_user_name,
            u.user_nick_name as u_user_nick_name
        from blog_details b inner join user_info u on b.blog_author = u.user_id
        where b.blog_delete = 0 and b.blog_id &lt; #{id}
        order by blog_date DESC
        limit 1
    </select>

    <select id="selectPrevBlog" resultMap="ExtendResultMap">
        select
            blog_id,
            blog_title,
            blog_date,
            blog_read,
            blog_summary,
            blog_label,
            blog_delete,
            blog_category,
            blog_html_content,
            blog_md_content,
            u.user_id        as u_user_id,
            u.user_name      as u_user_name,
            u.user_nick_name as u_user_nick_name
        from blog_details b inner join user_info u on b.blog_author = u.user_id
        where b.blog_delete = 0 and b.blog_id &gt; #{id}
        order by blog_date ASC
        limit 1
    </select>

    <select id="selectByInfo" resultMap="ExtendResultMap" parameterType="blogDetails">
        select
        blog_id,
        blog_title,
        blog_date,
        blog_read,
        blog_summary,
        blog_label,
        blog_delete,
        blog_category,
        blog_html_content,
        blog_md_content,
        u.user_id as u_user_id,
        u.user_name as u_user_name,
        u.user_nick_name as u_user_nick_name
        from blog_details b inner join user_info u on b.blog_author=u.user_id
        <where>
            b.blog_delete = 0
            <if test="blogId!=null ">
                and blog_id=#{blogId}
            </if>
            <if test="blogAuthor!=null and blogAuthor.userId!=null ">
                and blog_author like CONCAT('%',#{blogAuthor.userId},'%')
            </if>
            <if test="blogTitle!=null ">
                and blog_title like CONCAT('%',#{blogTitle},'%')
            </if>
        </where>
    </select>

    <update id="updateRead">
        UPDATE blog_details
        SET blog_read =
        ((SELECT selTmp.blog_read
          FROM (select tmp.*
                from blog_details tmp) AS selTmp
          where blog_id = #{id}) + 1)
        WHERE blog_id = #{id}
    </update>


</mapper>